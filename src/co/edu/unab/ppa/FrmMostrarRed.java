package co.edu.unab.ppa;

import co.edu.unab.db.DbRedes;
import co.edu.unab.entidad.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import javax.swing.JInternalFrame;

/**
 * Formulario para mostrar redes
 * @author Feisar Moreno
 * @date 30/06/2016
 */
public class FrmMostrarRed extends JInternalFrame {
    private final long idRed;
    private final FrmCargarRedes frmCargarRedes;
    private final Red red;
    private VisorRed visorRed;
            
    /**
     * Constructor para el formulario FrmMostrarRed
     * @param idRed Identificador de la red
     * @param frmCargarRedes Formulario de carga de redes
     */
    public FrmMostrarRed(long idRed, FrmCargarRedes frmCargarRedes) {
        initComponents();
        
        this.idRed = idRed;
        this.frmCargarRedes = frmCargarRedes;
        
        //Se cargan los datos de la red a mostrar
        DbRedes dbRedes = new DbRedes();
        this.red = dbRedes.getRed(false, this.idRed);
        
        //Se cargan los datos de la red
        String textoAux =
                "<html><b>Network:</b> " + this.red.getDescRed() + "<br /><br />" +
                "<b>Coordinate system:</b> " + this.red.getSistemaCoordenadas().getNombreSistema() + "</html>";
        lblInformacion.setText(textoAux);
        
        //Se carga el combo de atributos de red
        ArrayList<RedAtributo> listaRedAtributos = dbRedes.getListaRedesAtributos(false, this.idRed);
        
        this.cmbAtributosRed.removeAllItems();
        for (RedAtributo redAtributoAux : listaRedAtributos) {
            this.cmbAtributosRed.addItem(redAtributoAux);
        }
        this.cmbAtributosRed.setSelectedIndex(-1);
        this.cmbAtributosRed.setEnabled(false);
        
        //Se agrega el listener para cambios al comboBox de redes
        this.cmbAtributosRed.addItemListener(
            new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                    seleccionarAtributo();
                }
            }
        );
    }
    
    @Override
    public void dispose() {
        this.frmCargarRedes.habilitarComponentes(true);
        this.frmCargarRedes.setVisible(true);
        super.dispose();
    }
    
    /**
     * MÃ©todo que muestra la red.
     */
    public void mostrarRed() {
        //Se agrega el lienzo al panel
        RedAtributo redAtributoAux = (RedAtributo)this.cmbAtributosRed.getSelectedItem();
        this.visorRed = new VisorRed(this.idRed, this.chkEtiquetasRed.isSelected(), redAtributoAux);
        this.panResultados.removeAll();
        this.panResultados.add(visorRed);
        this.visorRed.setSize(this.panResultados.getSize());
    }
    
    private void seleccionarAtributo() {
        if (this.chkEtiquetasRed.isSelected() && this.cmbAtributosRed.getSelectedIndex() >= 0) {
            this.visorRed.setIndVerAtributos(this.chkEtiquetasRed.isSelected());
            this.visorRed.setRedAtributo((RedAtributo)this.cmbAtributosRed.getSelectedItem());
            this.visorRed.repaint();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblInformacion = new javax.swing.JLabel();
        panResultados = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        chkEtiquetasRed = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        cmbAtributosRed = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Networks");

        panResultados.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panResultadosLayout = new javax.swing.GroupLayout(panResultados);
        panResultados.setLayout(panResultadosLayout);
        panResultadosLayout.setHorizontalGroup(
            panResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );
        panResultadosLayout.setVerticalGroup(
            panResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        chkEtiquetasRed.setText("View network labels");
        chkEtiquetasRed.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkEtiquetasRedItemStateChanged(evt);
            }
        });

        jLabel1.setText("Label:");

        jLabel2.setText("<html>* Labels will be displayed for scales in wich a pixel represents a meter or less.</html>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbAtributosRed, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chkEtiquetasRed)
                        .addGap(0, 189, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkEtiquetasRed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbAtributosRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblInformacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(panResultados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(lblInformacion, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(231, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panResultados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkEtiquetasRedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkEtiquetasRedItemStateChanged
        this.cmbAtributosRed.setEnabled(this.chkEtiquetasRed.isSelected());
        if ((this.chkEtiquetasRed.isSelected() && this.cmbAtributosRed.getSelectedIndex() >= 0) || !this.chkEtiquetasRed.isSelected()) {
            this.visorRed.setIndVerAtributos(this.chkEtiquetasRed.isSelected());
            this.visorRed.setRedAtributo((RedAtributo)this.cmbAtributosRed.getSelectedItem());
            this.visorRed.repaint();
        }
    }//GEN-LAST:event_chkEtiquetasRedItemStateChanged
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkEtiquetasRed;
    private javax.swing.JComboBox cmbAtributosRed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblInformacion;
    private javax.swing.JPanel panResultados;
    // End of variables declaration//GEN-END:variables
}
